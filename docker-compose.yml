
services:
  nodejs:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      NODE_ENV: development
    env_file: 
      - .env
    volumes:
      - ./api/src:/app/src
      - ./api/package.json:/app/package.json
      - ./api/package-lock.json:/app/package-lock.json
      - ./api/tsconfig.json:/app/tsconfig.json
      - .env:/app/.env
    container_name: sdb_api
    #command: npm run localdev
    command: npm run dev
    ports:
      - ${API_PORT}:${API_PORT}
    
    # depends_on:
    #   - flagd
    #   - db

  # flagd:
  #   image: flagd
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile.flagd
  #   container_name: 'flagd'
  #   volumes:
  #     - ./flags.flagd.json:/etc/flagd/flags.flagd.json

  #   tty: true
  #   stdin_open: true
  #   ports:
  #     - 8013:8013
  #   command: start --uri file:/etc/flagd/flags.flagd.json
    
  # db:
  #   image: postgres.db
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile.postgres
  #   env_file: 
  #     - .env
  #   environment:
  #     POSTGRES_DB: ${DATABASENAME}
  #     POSTGRES_USER: ${USERNAME}
  #     POSTGRES_PASSWORD: ${PASSWORD}
  #   ports:
  #     - 5432:5432
  #   container_name: postgres.db
  #   command: postgres
  #   depends_on:
  #     - flagd
    